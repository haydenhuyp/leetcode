class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        /* O(n^2) naive solution */
        for (int i = 0; i < nums.length; i++){
            for (int j = i+1; j < nums.length && j <= i+k; j++){
                if (nums[i] == nums[j]){
                    if (Math.abs(i-j) <= k) return true;
                }
            }
        }
        return false;
        /* O(n) solution */
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++){
            // not in map
            if (!map.containsKey(nums[i])){
                map.put(nums[i], i);
            } 
            else {
                if (i - map.get(nums[i]) <= k) return true;
                map.put(nums[i], i);
            }
        }
        return false;
    }
}
