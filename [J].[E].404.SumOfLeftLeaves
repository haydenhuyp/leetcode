/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode node) {
        // if node is null or has no children
        if (node == null || (node.left == null && node.right == null)) return 0;
        // if node.left is the leaf node
        if (node.left != null){
            if (node.left.left == null && node.left.right == null) return node.left.val + sumOfLeftLeaves(node.right);
        }
        return sumOfLeftLeaves(node.left) + sumOfLeftLeaves(node.right);
    }
}
