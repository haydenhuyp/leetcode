/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        // insert the middle node
        int start = 0;
        int end = nums.length - 1;
        int mid = nums.length / 2;
        TreeNode root = new TreeNode(nums[mid]);
        insertMiddle(root, nums, start, mid - 1);
        insertMiddle(root, nums, mid + 1, end);
        return root;
    }
    
    public TreeNode insertMiddle(TreeNode root, int[] nums, int start, int end){
        if (start > end) return null;
        int mid = (start + end) / 2;
        root = insert(root, nums[mid]);
        insertMiddle(root, nums, start, mid - 1);
        insertMiddle(root, nums, mid + 1, end);
        return root;
    }

    public TreeNode insert(TreeNode root, int val){
        if (root == null) return new TreeNode(val);
        if (val < root.val){
            root.left = insert(root.left, val);
        } else{
            root.right = insert(root.right, val);
        }
        return root;
    }
}
